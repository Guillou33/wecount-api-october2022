export enum ROLES {
  ROLE_ADMIN = "ROLE_ADMIN",
  ROLE_CONSULTANT = "ROLE_CONSULTANT",
  ROLE_MANAGER = "ROLE_MANAGER",
  ROLE_USER = "ROLE_USER",
  ROLE_ANONYMOUS = "ROLE_ANONYMOUS",
}

export enum PERIMETER_ROLES {
  PERIMETER_ADMIN = "PERIMETER_ADMIN",
  PERIMETER_MANAGER = "PERIMETER_MANAGER",
  ENTRY_OWNER = "ENTRY_OWNER",
  ENTRY_WRITER = "ENTRY_WRITER",
  PERIMETER_COLLABORATOR = "PERIMETER_COLLABORATOR",
  PERIMETER_CONTRIBUTOR = "PERIMETER_CONTRIBUTOR",
  PERIMETER_ANONYMOUS = "PERIMETER_ANONYMOUS",
}

export type AllRoles = ROLES | PERIMETER_ROLES;

export type RoleHierarchy<RoleType extends AllRoles> = {
  [role in RoleType]?: RoleType[];
}

export const ROLES_HERARCHY: RoleHierarchy<ROLES> = {
  [ROLES.ROLE_ADMIN]: [ROLES.ROLE_CONSULTANT],
  [ROLES.ROLE_CONSULTANT]: [ROLES.ROLE_MANAGER],
  [ROLES.ROLE_MANAGER]: [ROLES.ROLE_USER],
  [ROLES.ROLE_USER]: [ROLES.ROLE_ANONYMOUS],
};

export const PERIMETER_ROLES_HIERARCHY: RoleHierarchy<PERIMETER_ROLES> = {
  [PERIMETER_ROLES.PERIMETER_ADMIN]: [PERIMETER_ROLES.PERIMETER_MANAGER],
  [PERIMETER_ROLES.PERIMETER_MANAGER]: [PERIMETER_ROLES.ENTRY_OWNER],
  [PERIMETER_ROLES.ENTRY_OWNER]: [PERIMETER_ROLES.ENTRY_WRITER],
  [PERIMETER_ROLES.ENTRY_WRITER]: [PERIMETER_ROLES.PERIMETER_COLLABORATOR],
  [PERIMETER_ROLES.PERIMETER_COLLABORATOR]: [PERIMETER_ROLES.PERIMETER_CONTRIBUTOR],
  [PERIMETER_ROLES.PERIMETER_CONTRIBUTOR]: [PERIMETER_ROLES.PERIMETER_ANONYMOUS],
};

interface SingleAccessControl {
  path: string,
  roles: ROLES[],
}

export const ACCESS_CONTROL_LIST: SingleAccessControl[] = [
  {
    path: "^/admin",
    roles: [ROLES.ROLE_ADMIN]
  },
  {
    path: "^/manager",
    roles: [ROLES.ROLE_MANAGER]
  },
  {
    path: "^/auth",
    roles: [ROLES.ROLE_ANONYMOUS]
  },
  {
    path: "^/",
    roles: [ROLES.ROLE_USER]
  },
]
